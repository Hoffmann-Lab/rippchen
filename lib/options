#! /usr/bin/env bash
# (c) Konstantin Riege

options::usage() {
	cat <<- EOF
		DESCRIPTION
		RIPPCHEN are tasty!
		acquire a taste for peak calling from *IP-Seq experiments or for differential gene expression- and ontology analysis from RNA-Seq data

		VERSION
		$version

		SYNOPSIS DGE ANALYSIS
		$(basename $0) -1 ctr1.fq,ctr2.fq,treat1.fq,treat2.fq -g genome.fa -c info

		SYNOPSIS PEAK CALLING
		$(basename $0) -1 ctrA.fq,ctrB.fq -t1 treatA1.fq,treatB1.fq -r1 treatA2.fq,treatB2.fq -g genome.fa

		SYNOPSIS PEAK CALLING AND DGE ANALYSIS
		$(basename $0) -1 ctrA.fq,ctrB.fq -t1 treatA1.fq,treatB1.fq -r1 treatA2.fq,treatB2.fq -g genome.fa -c info

		BASIC OPTIONS
		-h       | --help                   : prints this message
		-dev     | --devel                  : prints extended pipeline options
		-r       | --remove                 : clean up after successful termination
		-v       | --verbose                : enable verbose mode
		-g       | --genome [path]          : genome fasta input, without only preprocessing is performed
		-gtf     | --gtf [path]             : annotation gtf input - optional, default: genome.fasta.gtf
		-a       | --adapter [string,..]    : adapter sequence(s) - optional
		-o       | --out [path]             : output directory - default: $outdir
		-l       | --log [path]             : output directory - default: $outdir/run.log
		-tmp     | --tmp                    : temporary directory - default: $tmpdir/rippchen_tmp
		-t       | --threads [value]        : threads - predicted default: $threads
		-mem     | --memory [value]         : amout of memory for creating bam slices and processing them in parallel instances
		                                      available: $memory
		                                      default: 30000 (allows for $memthreads instances)
		                                      NOTE: needs to be raised in case of GCThreads, HeapSize or OutOfMemory errors

		GENERAL OPTIONS
		-resume  | --resume-from [value]    : resume from a specific pipeline step - see -dev|--devel
		-skip    | --skip [value,..]        : skip specific pipeline step(s) - see -dev|--devel, comma seperated
		-rx      | --regex                  : regex for sequence identifier with grouped tile information - default: ^\S+:(\d+):(\d+):(\d+)\s*.*
		-d       | --distance               : maximum read alignment hamming distance in % - default: 4
		-f       | --fragmentsize           : fragment size of sequenced mate pairs - default: 150
		-i       | --insertsize             : maximum allowed insert for aligning mate pairs - default: 200000
		-no-split| --no-split               : disable split read mapping - recommended for ChIP-Seq data
		-no-uniq | --no-uniqify             : disables extraction of properly paired and uniquely mapped reads
		-no-sort | --no-sort                : disables sorting alignments
		-no-idx  | --no-index               : disables indexing alignments
		-no-sege | --no-segemehl            : disables mapping by Segemehl
		-no-star | --no-star                : disables mapping by STAR
		-no-stats| --no-statistics          : disables fastq and mapping statistics
		-no-qual | --no-qualityanalysis     : disables quality analysis
		-no-clip | --no-clipping            : disables removal of adapter sequences
		-no-trim | --no-trimming            : disables quality trimming
		-no-cor  | --no-correction          : disables majority based raw read error correction
		-no-rrm  | --no-rrnafilter          : disables rRNA filter
		-no-quant| --no-quantification      : disables per feature or peak read quantification plus downstream analyses

		PEAK CALLING OPTIONS
		-n1      | --normalfq1 [path,..]    : normal fastq input - single or first pair, comma seperated
		-n2      | --normalfq2 [path,..]    : normal fastq input - optional. second pair, comma seperated
		-nr1     | --normalrepfq1 [path,..] : normal replicate fastq input - optional. single or first pair, comma seperated
		-nr2     | --normalrepfq2 [path,..] : normal replicate fastq input - optional. second pair, comma seperated
		-t1      | --treatmentfq1 [path,..] : *IP-Seq fastq input - single or first pair, comma seperated
		-t2      | --treatmentfq2 [path,..] : *IP-Seq fastq input - optional. second pair, comma seperated
		-tr1     | --treatrepfq1 [path,..]  : *IP-Seq replicate fastq input - optional. single or first pair, comma seperated
		-tr2     | --treatrepfq2 [path,..]  : *IP-Seq replicate fastq input - optional. second pair, comma seperated
		-no-rmd  | --no-removeduplicates    : disables removing duplicates
		-no-macs | --no-macs                : disables peak calling by macs
		-no-gem  | --no-gem                 : disables peak calling by gem

		DIFF GENE EXPR ANALYSIS OPTIONS
		-1       | --fq1 [path,..]          : fastq input - single or first pair, comma seperated
		-2       | --fq2 [path,..]          : fastq input - optional. second pair, comma seperated
		-m       | --mapped [path,..]       : SAM/BAM input - single or first pair, comma seperated (replaces -1 and -2)
		                                      NOTE: Requires uniquely mapped reads or NH:i: tag
		-c       | --comparisons [path,..]  : experiments info file(s) for pairwise comparisons (according to column two)
		                                      - triggers differential gene expression analysis
		                                      - requires annotation gtf input (see BASIC OPTIONS)
		                                      - format: 4 or 5 tab-seperated columns (5 in case of paired analysis)
		                                        common_basename   experiment   [single-end|paired-end]   Nreplicate   pairs
		                                      - fastq files needs to have equal basename ('.'-seperated) in column 1
		                                      - example for input A1.R1.fq, A1.R2.fq, A2.fq, B.R1.fq, B.R2.fq, C.fq:
		                                        A1   experimentA   paired-end   N1   patient1
		                                        A2   experimentA   single-end   N2   patient2
		                                        B    experimentB   paired-end   N1   patient1
		                                        C    experimentC   single-end   N1   patient2
		-s       | --strand [value,..]      : experiment(s) strandness - default: predicted unless defined
		                                      0 - unstranded
		                                      1 - dUTP ++,-+ (FR stranded)
		                                      2 - dUTP +-,++ (FR, reversely stranded)
		-dexnew  | --dexnewprepare [value]  : switch DEXSeq annotation file preparation method - default: 0
		                                      0 - use preparation script shipped with DEXSeq
		                                      1 - do not merge transcripts and if present in GTF info and use protein_coding biotype only
		                                      2 - see [1] and additionally if feature name matches UTR/utr, exclude them
		-qi      | --quantifyid             : switch to other feature type for quantification - default: exon
		                                      NOTE: quantifying using a different feature will break differential gene expression analysis
		-qf      | --quantifyfeature        : switch to other feature identifier for quantification - default: gene_id
		-no-pca  | --no-pca                 : disables pca plots
		-no-dea  | --no-diffexanalysis      : disables differential expression analysis (gene and/or peak) and course clustering
		-no-iso  | --no-isoformanalysis     : disables differential isoform analysis by DEXSeq and annotation preparation
		-no-clust| --no-clustering          : disables feature co-expression clustering for experiments defined via -c
		-cf      | --clusterfilter [value]  : decide for a set of differntially expressed features to be clustered for co-expression - default: 0
		                                      0 - padj <= 0.05 in at least one comparison defined via -c
		                                      1 - padj <= 0.05 and a log2foldchange difference >= 0.5 in at least one comparison defined via -c
		                                      2 - if present in GTF info, use features of protein_coding biotype only
		                                      3 - discard features within the 30% percentile of lowest TPM values
		                                      20 - 2 + 0
		                                      21 - 2 + 1
		                                      23 - 2 + 3
		                                      230 - 2 + 0 + 3
		                                      231 - 2 + 1 + 3	
		-allclust| --allclustering          : Additionally use all features to be clustered for co-expression (very slow! ~ 10 hours for 4 human experiments)
		                                      - will discard features within the 30% percentile of lowest TPM values
		-no-go   | --no-geneontology        : disables gene ontology enrichment analysis


		REFERENCES
		(c) Konstantin Riege
		konstantin.riege{a}leibniz-fli{.}de
	EOF
	exit 0
}

options::developer() {
	cat <<- EOF
		DESCRIPTION
		In case of restarting or to resume an analysis use the identifiers below, listed in processing order

		DEVELOPER OPTIONS
		md5   : check for md5sums 
		qual  : quality analysis
		clip  : adapter clipping
		trim  : trimming
		cor   : raw read correction
		rrm   : rRNA filtering
		sege  : Segemehl mapping
		star  : STAR mapping
		uniq  : extraction of properly paired and uniquely mapped reads
		rep   : pooling/generating replicates
		sort  : sorting and indexing of sam/bam files
		slice : slicing bams during rmd for parallelization
		rmd   : removing duplicates
		idx   : intermediate and final bam indexing
		stats : mapping statistics
		jstats: joining mapping statistics
		macs  : peak calling by macs
		gem   : peak calling by gem
		met   : peak calling by metpeak
		count : read quantification
		tpm   : TPM calculation
		jtpm  : TPM concatenation
		pca   : pca on all samples
		dea   : differential expression analysis
		iso   : differential isoform analysis
		clust : coexpression clustering
		go    : go enrichment
	EOF
	exit 0
}

options::checkopt (){
	case $1 in
	-h | --help) options::usage;;
	-dev | --devel) options::developer;;
	-v | --verbose) verbose=true; return 0;;
	-r | --remove) cleanup=true; return 0;;

	-no-qual | --no-qualityanalysis) noqual=true; return 0;;
	-no-clip | --no-clipping) noclip=true; return 0;;
	-no-trim | --no-trimming) notrim=true; return 0;;
	-no-cor  | --no-correction) nocor=true; return 0;;
	-no-rrm  | --no-rrnafilter) norrm=true; return 0;;
	-no-split | --no-split) nosplitreads=true; return 0;;
	-no-sege | --no-segemehl) nosege=true; return 0;;
	-no-star | --no-star) nostar=true; return 0;;

	-no-uniq    | --no-uniqify) nouniq=true; return 0;;
	-no-sort    | --no-sort) nosort=true; return 0;;
	-no-idx     | --no-index) noidx=true; return 0;;
	-no-stats   | --no-statistics) nostats=true; return 0;;

	-no-rmd  | --no-removeduplicates) normd=true; return 0;;
	-no-macs | --no-macs) nomacs=true; return 0;;
	-no-gem  | --no-gem) nogem=true; return 0;;

	-no-quant| --no-quantification) noquant=true; nodea=true; noiso=true; noclust=true; nogo=true; return 0;;
	-no-pca  | --no-pca) nopca=true; return 0;;
	-no-dea  | --no-diffexanalysis) nodea=true; return 0;;
	-no-iso  | --no-isoformanalysis) noiso=true; return 0;;
	-no-clust| --no-clustering) noclust=true; return 0;;
	-allclust| --allclustering) allclust=true; return 0;;
	-no-go   | --no-geneontology) nogo=true; return 0;;

	-1 | --fq1 | -n1 | --normalfq1) nfq1=$2;;
	-2 | --fq2 | -n2 | --normalfq2) nfq2=$2;;
	-m | --mapped) nmap=$2; noqual=true; notrim=true; nocor=true; norrm=true; nosege=true; nostar=true; notop=1; nobwa=true;;
	-nr1 | --normalrepfq1) nrfq1=$2;;
	-nr2 | --normalrepfq2) nrfq2=$2;;
	-t1 | --treatmentfq1) tfq1=$2;;
	-t2 | --treatmentfq2) tfq2=$2;;
	-tr1 | --treatrepfq1) rfq1=$2;;
	-tr2 | --treatrepfq2) rfq2=$2;;
	-rx | --regex) regex=$2;;
	-c | --comparisons) mapfile -t -d ',' $comparisons <<< $2;;
	-s | --strand) mapfile -t -d ',' $strandness <<< $2;;
	-a | --adapter) mapfile -t -d ',' $adapter <<< $2;;
	-d | --distance) accuracy=$2;;
	-f | --fragmentsize) fragmentsize=$2;;
	-i | --insertsize) insertsize=$2;;
	-dexnew | --dexnewprepare) dexseqnew=$2;;
	-cf | --clusterfilter) clusterfilter=$2;;
	-qi | --quantifyid) quantifyid=$2;;
	-qf | --quantifyfeature) quantifyfeature=$2;;

	-t | --threads) threads=$2;;
	-mem | --memory) mem=$2;;
	-g | --genome) genome=$2;;
	-gtf | --gtf) annotation=$2;;
	-o | --out) outdir=$2;;
	-l | --log) log=$2;;
	-tmp | --tmp) tmpdir=$2;;
   	-resume | --resume-from)
		# don't Sslice !
        for s in md5 qual clip trim cor rrm sege star uniq rep sort rmd idx stats jstats macs gem met count tpm jtpm pca dea iso clust go; do
            [[ "$2" == "$s" ]] && break
            eval "S$s=true"
        done
    ;;
    -skip | --skip) 
		mapfile -d ',' -t <<< $2
		for x in ${MAPFILE[@]}; do
			for s in md5 qual clip trim cor rrm sege star uniq rep sort slice rmd idx stats jstats macs gem met count tpm jtpm pca dea iso clust go; do
            	[[ "$x" == "$s" ]] && eval "S$s=true"
        	done
		done
	;;

	-*) echo "illegal option $1" >&2; return 1;; 
	*) echo "illegal option $2" >&2; return 1;;
	esac
	[[ ! $2 ]] && echo "argument missing for option $1" >&2 && return 1
	[[ $2 =~ ^- ]] && echo "illegal argument $2 for option $1" >&2 && return 1

	return 0
}

options::parse(){
	[[ $# -eq 0 ]] && options::usage
	[[ $# -eq 1 ]] && [[ ! $1 =~ ^- ]] && echo "illegal option $1" >&2 && return 1
	for i in $(seq 1 $#); do
		if [[ ${!i} =~ ^- ]]; then
			[[ i -lt $# ]] && j=$((i+1))
			options::checkopt "${!i}" "${!j}" || return 1
		else 
			((++i))
		fi
	done

	return 0
}